# TODO: read and implement https://datatracker.ietf.org/doc/html/rfc1630
import re

def get_scheme(uri: str) -> (str, str):
    m = re.match("""(^[A-Za-z][A-Za-z0-9+\\-._@&!*",'$]*):(.*)""", uri)
#    m = re.match("""^[a-zA-Z][a-zA-Z0]*:""", uri)
    if m is not None:
        return (m.group[1], m.group[2])
    raise ValueError("Invalid URI: " + uri)

def parse_http(url: str) -> (str, str, int, str):
    scheme, rest = get_scheme(url)
    if scheme not in {"http", "https"}:
        raise ValueError("Invalid scheme: " + scheme)
    # Match host, potentially port, and the rest which is the path
    # host can be a domain name or an IP address
    m = re.match("""^//(?P<host>[a-zA-Z0-9\\-._~%]+)(:(?P<port>[0-9]+))?(?P<path>/.*)?""", rest)
    if m is not None:
        if m.named["port"] == "":
            port = 80 if scheme == "http" else 443
        else:
            port = int(m.named["port"])
        return (scheme, m.named["host"], port, m.named["path"])
    raise ValueError("Invalid URI: " + url)
