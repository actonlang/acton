# TODO: randint should not be pure!!! but what should it be?
def randint(min: int, max: int) -> int:
    NotImplemented

def randi64(min: i64, max: i64) -> i64:
    NotImplemented

def randstr(length: i64) -> str:
    char_set = list("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789")
    res = ""
    for i in range(length):
        res += choice(char_set)
    return res

def choice[T](sequence: Sequence[T]) -> T:
    """
    Return a random element from the non-empty sequence.

    :param sequence: List or sequence to choose from.
    :return: A random element from the sequence.
    """
    if len(sequence) == 0:
        raise ValueError('Cannot choose from an empty sequence')

    index = randi64(0, len(sequence))
    return sequence[index]


def sample[T](population: list[T], k: i64) -> list[T]:
    """
    Chooses k unique random elements from a population sequence.

    :param population: List from which to sample.
    :param k: Number of unique elements to pick.
    :return: A new list containing elements from the population while maintaining the original sequence order.
    """
    if not (0 <= k and k <= len(population)):
        raise ValueError("Sample larger than population or is negative")

    result = []
    indices = list(range(len(population)))
    for _ in range(k):
        idx_to_pop = choice(indices)
        idx = 0
        for i in range(len(indices)):
            if indices[i] == idx_to_pop:
                idx = i
                break
        indices.pop(idx)
        result.append(population[idx_to_pop])
    return result


def rand_bigint(size):
    """
    Returns a randomly chosen integer (positive, zero or negative)
    
    :param size: Maximal number of decimal digits (must be positive)
    """
    if (size <= 0):
        raise ValueError('decimal length of int must be positive')
    digits = [choice(["","-"])]
    for i in range(size):
        digits.append(choice(["0","1","2","3","4","5","6","7","8","9"]))
    return int("".join(digits))

def rand_list(size)->list[int]:
    """
    Returns a randomly chosen list of integers.
    
    :param size: Maximal number of elements and maximal size of list elements (must be positive)
    """
    if (size <= 0):
        raise ValueError('decimal length of int must be positive')
    res = []
    for i in range(randint(0,size)):
        res.append(randint(-size, size))
    return res
