from random import *

def qcheck_i64_1(name: str, prop: (i64) -> bool, verbose = False)->int:
    print("Testing",name)
    i: i64 = 1
    while i <= 100:
        m = i*i
        a = randi64(-m,m)
        if not prop(a):
            print("   ",name,"failed after",i,"tests:\n",a,"\n")
            return 1
        else:
            if verbose:
                print("   Argument =",a,"; passed")
        i += 1
    print("   OK,",name,"passed 100 tests\n")
    return 0

def qcheck_i64_2(name: str, prop: (i64, i64) -> bool, verbose = False)->int:
    print("Testing",name)
    i: i64 = 1
    while i <= 100:
        m = i*i
        a = randi64(-m,m)
        b = randi64(-m,m)
        if not prop(a,b):
            print("   ",name,"failed after",i,"tests:\n",a,"\n",b)
            return 1
        else:
            if verbose:
                print("   Argument 1 =",a," argument 2 =",b,"; passed")
        i += 1
    print("   OK,",name,"passed 100 tests\n")
    return 0

def qcheck_int_1(name: str, prop: (int) -> bool, verbose = False)->int:
    print("Testing",name)
    i= 1
    while i <= 100:
        m = 2+i//2
        a = rand_bigint(m)
        if not prop(a):
            print("   ",name,"failed after",i,"tests:\n",a)
            return 1
        else:
            if verbose:
                print("   Argument =",a,"; passed")
        i += 1
    print("   OK,",name,"passed 100 tests\n")
    return 0

def qcheck_int_2(name: str, prop: (int, int) -> bool, verbose = False)->int:
    print("Testing",name)
    i= 1
    while i <= 100:
        a = rand_bigint(randint(2,i+2))
        b = rand_bigint(randint(2,i+2))
        if not prop(a,b):
            print("   ",name,"failed after",i,"tests:\n",a,"\n",b)
            return 1
        else:
            if verbose:
                print("   Argument 1 =",a," argument 2 =",b,"; passed")
        i += 1
    print("   OK,",name,"passed 100 tests\n")
    return 0

def qcheck_int_i64(name: str, prop: (int, i64) -> bool, verbose = False)->int:
    print("Testing",name)
    i= 1
    while i <= 100:
        a = rand_bigint(randint(2,int(i)+2))
        b = randi64(-i*i,i*i)
        if not prop(a,b):
            print("   ",name,"failed after",i,"tests:\n",a,"\n",b)
            return 1
        else:
            if verbose:
                print("   Argument 1 =",a," argument 2 =",b,"; passed")
        i += 1
    print("   OK,",name,"passed 100 tests\n")
    return 0

    
def qcheck_0(name: str, prop: () -> bool)->int:
    print("Testing",name)
    if prop ():
        print("   OK,",name,"passed\n")
        return 0
    else:
        print("   ",name,"failed")
        return 1
        
def qcheck_list_2(name: str, prop: (list[int], list[int]) -> bool, verbose = False)->int:
    print("Testing",name)
    i = 1
    while i <= 100:
        a = rand_list(i)
        b = rand_list(i)
        if not prop(a,b):
            print("   *************",name,"FAILED AFTER",i,"TESTS:*************\n",a,"\n",b)
            return 1
        else:
            if verbose:
                print("   Argument 1 =",a," argument 2 =",b,"; passed")
        i += 1
    print("   OK,",name,"passed 100 tests\n")
    return 0
