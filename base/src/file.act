
class FileAuth():
    def __init__(self, auth: WorldAuth):
        pass

class ReadFileAuth():
    def __init__(self, auth: FileAuth):
        pass

class WriteFileAuth():
    def __init__(self, auth: FileAuth):
        pass


actor FS(auth: FileAuth):
    """File system operations """
    action def mkdir(filename: str):
        """Make a directory"""
        pass


actor ReadFile(auth: ReadFileAuth, filename: str):
    """Read a file
    """
    var _fd = -1

    proc def _open_file():
        """C magic"""
        NotImplemented
    _open_file()

    action def read() -> bytes:
        """Read content of file"""
        NotImplemented

    action def close() -> None:
        """Close file"""
        NotImplemented


actor WriteFile(auth: WriteFileAuth, filename: str):
    """Write a file
    """
    var _fd = -1
    proc def _open_file():
        """C magic"""
        NotImplemented
    _open_file()

    action def write(data: bytes) -> None:
        """Write data to file"""
        NotImplemented

    action def close() -> None:
        """Close file"""
        NotImplemented
