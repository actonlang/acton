import testing

import xml

def _test_xml1():
    a = xml.Node("a", children=[
        xml.Node("b", text="hello"),
        xml.Node("c", text="world")
    ])
    return a.encode()

def _test_xml_roundtrip():
    """XML str -> data -> XML str
    """
    # TODO: remove indent after adding argument to xml.encode() to not pretty print
    test_xml = [
        """<a>    <b>hello</b></a>""",
        """<a attr="foo" battr="bar">    <b></b></a>""",
        """<a>\n    <b1>hej</b1>\n    <b2>test</b2>\n</a>""",
        """<a xmlns="http://foo"><b>2</b></a>""",
        """<a xmlns:ns="http://foo"><ns:b>2</ns:b></a>""",
        """<data><l>ƒçaw</l><baw></baw></data>"""
    ]
    for s in test_xml:
        #print(s)
        d = xml.decode(s)
        #print(d)
        e = xml.encode(d)
        #print(e)

        testing.assertNotNone(d, "xml.decode() returned None")
        testing.assertNotNone(e, "xml.encode() returned None")
        if s is not None and e is not None:
            testing.assertEqual(s, e, "XML str -> data -> XML str")

    d = xml.decode(test_xml[0])

    testing.assertEqual(d.tag, "a", "get tag")
    testing.assertEqual(d.text, "    ", "get text")

    # Test text=None and tail=None
    e = xml.encode(xml.Node("tag", [(None, "http://example.com")], None, [], [], None, None))

def _test_xml_skip_comment():
    test_xml = """<a><!-- comment --><b>hello</b></a>"""
    d = xml.decode(test_xml)
    e = xml.encode(d)
    testing.assertEqual(e, "<a><b>hello</b></a>", "XML str -> data -> XML str (remove comment)")
