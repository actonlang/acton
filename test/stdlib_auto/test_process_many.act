import acton.rts
import process


actor GC(env):
    def _tihi():
        acton.rts.gc(env.syscap)
        after 0.0001: _tihi()

    after 0: _tihi()


actor main(env: Env):
    var num=1000
    if len(env.argv) > 1:
        num = int(env.argv[1])

    var exited = 0
    def on_exit(p, exit_code, term_signal, stdout_buf, stderr_buf):
        exited += 1
        print("Process exited with code: ", exit_code, " terminated with signal:", term_signal, "  exited:", exited)
        if stdout_buf != b"HELLO\n":
            print("stdout_buf is not correct, got:", stdout_buf)
            env.exit(1)
        if exited == num:
            print("Enough...")
            env.exit(0)

    def on_error(p, error):
        print("Error from process:", error)
        await async env.exit(1)

    def test():
        print("Starting process..")
        pc = process.ProcessCap(env.cap)
        p = process.RunProcess(pc, ["echo", "HELLO"], on_exit, on_error)

    gc = GC(env)

    var i = 0
    def run_tests():
        if i < num:
            test()
            i += 1
            after 0: run_tests()

    after 0: run_tests()
