import logging

def deepfun(p_logh):
    logh = logging.Handler("deepfun")
    logh.set_handler(p_logh)
    log = logging.Logger(logh)
    log.name = "deepy"
    log.emergency("deep derp", None)
    log.alert("deep derp", None)
    log.critical("deep derp", None)
    log.error("deep derp", None)
    log.warning("deep derp", None)
    log.info("deep derp", None)
    log.notice("deep derp", None)
    log.debug("deep derp", None)
    log.verbose("deep derp", None)
    log.trace("deep derp", None)

actor MyApp(log_handler):
    logh = logging.Handler("MyApp")
    logh.set_handler(log_handler)
    log = logging.Logger(logh)
    log.info("Starting up", None)

    def _work():
        log.info("Doing some work", None)
        log.info("Bidabopp", {"actor": "MyApp", "thing": "bopp", "number": 42})
        deepfun(logh)
        after 1.5: _work()
    _work()

actor main(env):
    loghandler = logging.Handler(None)
    loghandler.add_sink(logging.StdoutSink())

    log = logging.Logger(loghandler)

    my_app = MyApp(loghandler)

    def logsome():
        log.info("hello", None)
        log.debug("dello", None)
        after 0.5: logsome()
    logsome()

    def _exit():
        env.exit(0)
    after 1.0: _exit()
