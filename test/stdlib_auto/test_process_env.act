import process


actor main(env):
    def on_stderr(p, data):
        print("Received output on stderr:", data)
        print("... but not expecting any, exiting with error")
        exit(env.cap, 1)

    def on_stdout(p, data):
        print("Received output on stdout:", data)
        if data == b"FOO=BAR\n":
            print("environment variables as they should, yay")
            exit(env.cap, 0)
        else:
            print("Unexpected environment variables, exiting with error...")
            exit(env.cap, 1)

    def on_exit(p, exit_code, term_signal):
        print("Process exited with code: ", exit_code, " terminated with signal:", term_signal)
        print("Exited in unexpected way, error...")
        exit(env.cap, 1)

    def on_error(p, error):
        print("Error from process:", error)
        exit(env.cap, 1)

    def test():
        print("Starting process..")
        pc = process.ProcessCap(env.cap)
        p = process.Process(pc, ["env"], None, {"FOO": "BAR"}, on_stdout, on_stderr, on_exit, on_error)

    def ex():
        print("Test timeout, exiting with error")
        exit(env.cap, 1)

    test()
    after 3: ex()
