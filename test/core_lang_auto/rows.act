
def test1(a, c):
    expect : (a: str, c: str) = (c=c, a=a)
    return expect

def test2(c, a, kw: (b:str, **)):
    expect : (a: str, b: str, c: str, e: str) = (c=c, a=a, **kw)
    return expect

def test3(c, kw: (b: str, **)):
    expect : (c: str, **) = (c=c, **kw)
    return expect

def test4(c, a, kw: (b: str, **)):
    expect : (a: str, b: str, c: str, **) = (c=c, a=a, **kw)
    return expect

def test5(c, a, kw: (b: str, **)):
    expect : (a: str, b: str, c: str, e: str, **) = (c=c, a=a, **kw)
    return expect

def test6(c, a, **kw):
    expect : (a: str, b: str, c: str, e: str, **) = (c=c, a=a, **kw)
    return expect

def test7(c, a, d:str, **kw):
    expect : (a: str, b: str, c: str, e: str, **) = (c=c, a=a, d=d, **kw)
    return expect

def test8(c, a, **kw):
    expect : (a: str, c: str, **) = (c=c, a=a, **kw)
    return expect

def test9(c, a, d: str, **kw):
    expect : (a: str, c: str, **) = (c=c, a=a, d=d, **kw)
    return expect

def test10(c, a, d, **kw):
    def expect(a: str, c: str, **kw : (d: str, **)):
        return (a, c, kw)
    return expect(**(c=c, a=a, d=d, **kw))

def test11(c, a, **kw):
    def expect(a: str, c: str, **kw : (d: str, **)):
        return (a, c, kw)
    return expect(**(c=c, a=a, **kw))

def test12(c: str, a, d: str):
    expect : (a: str, **) = (c=c, a=a, d=d)
    return expect

def test13(c: str, a, d: str, **kw):
    expect : (a: str, **) = (c=c, a=a, d=d, **kw)
    return expect

def test14(x, *args):
    return args

def test15(x, **kwargs):
    return kwargs

def test16(x, *args, y, **kwargs):
    return (args, kwargs)

actor main(env):
    out1 = test1('a', 'c').__str__()
    out2 = test2('c', 'a', ('b', e='e')).__str__()
    out3 = test3('c', ('b', x='x')).__str__()
    out4 = test4('c', 'a', ('b', e='e')).__str__()
    out5 = test5('c', 'a', ('b', e='e')).__str__()
    out6 = test6('c', 'a', e='e', b='b', f='f').__str__()
    out7 = test7('c', 'a', 'd', b='b', e='e').__str__()
    out8 = test8('c', 'a', e='e', b='b').__str__()
    out9 = test9('c', 'a', 'd', b='b').__str__()
    out10 = test10('c', 'a', 'd', b='b', e='e').__str__()
    out11 = test11('c', 'a', d='d').__str__()
    out12 = test12('c', 'a', 'd').__str__()
    out13 = test13('c', 'a', 'd', b='b').__str__()
    out14 = test14(None, 'a', 3.5)
    out15 = test15(None, a='a', b=3.5)
    out16, out17 = test16(None, 18, '19', a='a', y=3, b=3.5)
    
#    print(out1)
#    print(out2)
#    print(out3)
#    print(out4)
#    print(out5)
#    print(out6)
#    print(out7)
#    print(out8)
#    print(out9)
#    print(out10)
#    print(out11)
#    print(out12)
#    print(out13)

    if out1 != "('a', 'c')":
        print("Bad 1:", out1)
        env.exit(1)
    if out2 != "('a', 'b', 'c', 'e')":
        print("Bad 2:", out2)
        env.exit(1)
    if out3 != "('c', ('b', ('x')))":
        print("Bad 3:", out3)
        env.exit(1)
    if out4 != "('a', 'b', 'c', ('e'))":
        print("Bad 4:", out4)
        env.exit(1)
    if out5 != "('a', 'b', 'c', 'e', ())":
        print("Bad 5:", out5)
        env.exit(1)
    if out6 != "('a', 'b', 'c', 'e', ('f'))":
        print("Bad 6:", out6)
        env.exit(1)
    if out7 != "('a', 'b', 'c', 'e', ('d', ()))":
        print("Bad 7:", out7)
        env.exit(1)
    if out8 != "('a', 'c', ('e', 'b'))":
        print("Bad 8:", out8)
        env.exit(1)
    if out9 != "('a', 'c', ('d', ('b')))":
        print("Bad 9:", out9)
        env.exit(1)
    if out10 != "('a', 'c', ('d', ('b', 'e')))":
        print("Bad 10:", out10)
        env.exit(1)
    if out11 != "('a', 'c', ('d', ()))":
        print("Bad 11:", out11)
        env.exit(1)
    if out12 != "('a', ('c', 'd'))":
        print("Bad 12:", out12)
        env.exit(1)
    if out13 != "('a', ('c', 'd', ('b')))":
        print("Bad 13:", out13)
        env.exit(1)
    if out14.0 != 'a' or out14.1 != 3.5:
        print("Bad 14:", out14)
        env.exit(1)
    if out15.a != 'a' or out15.b != 3.5:
        print("Bad 15:", out15)
        env.exit(1)
    if out16.0 != 18 or out16.1 != '19':
        print("Bad 16:", out16)
        env.exit(1)
    if out17.a != 'a' or out17.b != 3.5:
        print("Bad 17:", out17)
        env.exit(1)
    
    print("All is well")
    env.exit(0)
