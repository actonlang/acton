name: Build, Test & Release

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

# NOTE: Jobs for version tagged releases just pattern match on any tag starting
# with 'v'. That's probably a version tag, but could be something else. Is there
# a better way to match?

jobs:
  test-darwin:
    strategy:
      matrix:
        os: [macos-10.15, macos-11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Set BUILD_RELEASE when we are building for a version tag"
        run: |
          echo "BUILD_RELEASE=1" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/v')
      - name: "Check out repository code"
        uses: actions/checkout@v2
      - name: "Cache ~/.stack"
        uses: actions/cache@v2
        with:
          path: |
            ~/.stack
          key: ${{ matrix.os }}-${{ secrets.CACHE_VERSION }}
      - name: "Install build prerequisites"
        run: brew install argp-standalone haskell-stack protobuf-c util-linux
      - name: "Build Acton"
        run: make -j2 -C ${{ github.workspace }} BUILD_RELEASE=${{ env.BUILD_RELEASE }}
      - name: "Build a release"
        run: make -C ${{ github.workspace }} release
      - name: "Upload artifact"
        uses: actions/upload-artifact@v2
        with:
          name: acton-${{ matrix.os }}
          path: ${{ github.workspace }}/acton-darwin-x86_64*
          if-no-files-found: error
      - name: "Run tests"
        run: make -C ${{ github.workspace }} test


  test-linux:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye
    steps:
      - name: "Set BUILD_RELEASE when we are building for a version tag"
        run: |
          echo "BUILD_RELEASE=1" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/v')
      - name: "Check out repository code"
        uses: actions/checkout@v2
      - name: "Cache ~/.stack"
        uses: actions/cache@v2
        with:
          path: |
            ~/.stack
          key: ${{ runner.os }}-${{ secrets.CACHE_VERSION }}
      - name: "Install build prerequisites"
        run: |
          apt-get update
          apt-get install -qy bzip2 gcc haskell-stack libbsd-dev libprotobuf-c-dev libutf8proc-dev make procps python3 uuid-dev zlib1g-dev
      - name: chown our home dir to avoid stack complaining
        run: chown -R root:root /github/home
      - name: "Build Acton"
        run: make -j2 -C ${GITHUB_WORKSPACE} BUILD_RELEASE=${{ env.BUILD_RELEASE }}
      - name: "Build a release"
        run: make -C ${GITHUB_WORKSPACE} release
      - name: "Upload artifact"
        uses: actions/upload-artifact@v2
        with:
          name: acton-linux
          path: ${{ github.workspace }}/acton-linux-x86_64*
          if-no-files-found: error
      - name: "Run tests"
        run: make -C ${GITHUB_WORKSPACE} test

  build-debs:
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye
    steps:
      - name: "Set BUILD_RELEASE when we are building for a version tag"
        run: |
          echo "BUILD_RELEASE=1" >> $GITHUB_ENV
        if: startsWith(github.ref, 'refs/tags/v')
      - name: "Check out repository code"
        uses: actions/checkout@v2
      - name: "Install build prerequisites"
        run: |
          apt-get update
          apt-get install -qy build-essential debhelper devscripts gcc haskell-stack libbsd-dev libprotobuf-c-dev libutf8proc-dev make uuid-dev zlib1g-dev
      - name: "Build Debian packages"
        run: make -C ${GITHUB_WORKSPACE} debs BUILD_RELEASE=${{ env.BUILD_RELEASE }}
      - name: "Compute variables"
        id: vars
        run: |
          echo "::set-output name=debdir::$(realpath ${GITHUB_WORKSPACE}/../deb)"
          echo "::set-output name=artifact_dir::$(dirname ${{ github.workspace }})"
      - name: "Move deb files into place for easy artifact extraction"
        run: |
          mkdir -p ${{ steps.vars.outputs.debdir }}
          mv ${{ steps.vars.outputs.debdir }}/../acton_* ${{ steps.vars.outputs.debdir }}/../acton-dbgsym_* ${{ steps.vars.outputs.debdir }}/
      - name: "Upload artifact"
        uses: actions/upload-artifact@v2
        with:
          name: acton-debian
          # Using a wildcard and then deb here to force the entire directory to
          # be part of resulting artifact.
          path: ${{ steps.vars.outputs.artifact_dir }}/*deb/
          if-no-files-found: error

  update-apt-repo:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye
    needs: build-debs
    steps:
      - name: Install build prerequisites
        run: |
          apt-get update
          apt-get install -qy git gnupg reprepro
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.APT_GPG_PRIVATE_KEY }}
      - name: Check out code of apt.acton-lang.io repo
        uses: actions/checkout@v2
        with:
          repository: actonlang/apt.acton-lang.io
          path: apt
          ssh-key: ${{ secrets.APT_DEPLOY_KEY }}
      - name: "Download artifacts for Debian Linux"
        uses: actions/download-artifact@v2
        with:
          name: acton-debian
      - name: "Include new deb in Apt repository"
        run: |
          cd apt
          reprepro include bullseye ../deb/*.changes
      - name: "Push updates to git repository for apt.acton-lang.io"
        run: |
          cd apt
          git config user.name "Apt Bot"
          git config user.email apt@acton-lang.org
          git add .
          git status
          git diff
          git commit -a -m "Updated apt package index"
          git push


  # If we are on the main branch, we'll create or update a pre-release called
  # 'tip' which holds the latest build output from the main branch!  We upload
  # artifacts twice, first with the version number held in the filename and a
  # second time after being renamed to remove the version number in the
  # filename, thus providing a stable URL for downloading the tip tar balls.
  pre-release-tip:
    # Only run on the main branch
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test-darwin, test-linux, build-debs]
    steps:
      - name: "Delete current tip release & tag"
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: tip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Check out repository code"
        uses: actions/checkout@v2
      - name: "Download artifacts for darwin / macos-11"
        uses: actions/download-artifact@v2
        with:
          name: acton-macos-11
      - name: "Download artifacts for Linux"
        uses: actions/download-artifact@v2
        with:
          name: acton-linux
      - name: "Download artifacts for Debian Linux"
        uses: actions/download-artifact@v2
        with:
          name: acton-debian
      - name: "List downloaded artifacts"
        run: ls
      - name: "Workaround for changelog extractor that looks for number versions in headlines, which won't work for 'Unreleased'"
        run: sed -i -e 's/^## Unreleased/## [999.9] Unreleased\nThis is an unreleased snapshot built from the main branch. Like a nightly but more up to date./' CHANGELOG.md
      - name: "Extract release notes"
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
      - name: "(re-)create 'tip' release notes and upload artifacts as assets"
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "acton*.tar*,deb/*deb"
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          draft: false
          prerelease: true
          name: "tip"
          tag: "tip"
          token: ${{ secrets.GITHUB_TOKEN }}
          replacesArtifacts: true
      - name: "Remove version number from darwin tar ball"
        run: mv acton-darwin-x86_64*tar.bz2 acton-darwin-x86_64.tar.bz2
      - name: "Remove version number from darwin tar ball"
        run: mv acton-linux-x86_64*tar.bz2 acton-linux-x86_64.tar.bz2
      - name: "Upload artifacts without version number for stable links"
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: acton*.tar*
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          draft: false
          prerelease: true
          name: "tip"
          tag: "tip"
          token: ${{ secrets.GITHUB_TOKEN }}
          replacesArtifacts: true


  # Release job, only run for version tagged releases.
  release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [test-darwin, test-linux, build-debs]
    steps:
      - name: "Check out repository code"
        uses: actions/checkout@v2
      - name: "Download artifacts for darwin / macos-11"
        uses: actions/download-artifact@v2
        with:
          name: acton-macos-11
      - name: "Download artifacts for Linux"
        uses: actions/download-artifact@v2
        with:
          name: acton-linux
      - name: "Download artifacts for Debian Linux"
        uses: actions/download-artifact@v2
        with:
          name: acton-debian
      - name: "List downloaded artifacts"
        run: ls
      - name: "Extract release notes"
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
      - name: "Create release"
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "acton*.tar*,deb/*deb"
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}
          replacesArtifacts: true


  # Update our homebrew tap
  update-homebrew:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [test-darwin, test-linux]
    steps:
      - name: "Get the version"
        id: get_version
        run: echo ::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)
      - run: wget https://github.com/actonlang/acton/archive/refs/tags/${{ steps.get_version.outputs.version }}.tar.gz
      - run: sha256sum ${{ steps.get_version.outputs.version }}.tar.gz
      - id: shasum
        run: echo "::set-output name=sum::$(sha256sum ${{ steps.get_version.outputs.version }}.tar.gz | cut -d' ' -f1)"
      - name: "Check out code of our brew repo"
        uses: actions/checkout@v2
        with:
          repository: actonlang/homebrew-acton
      - name: "Update brew formula for acton with new version"
        run: |
          sed -i -e 's,^  url.*,  url "https://github.com/actonlang/acton/archive/refs/tags/${{ steps.get_version.outputs.version }}.tar.gz",' -e 's/^  sha256.*/  sha256 "${{ steps.shasum.outputs.sum }}"/' Formula/acton.rb
      - name: "Create Pull Request"
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.ACTBOT_PAT }}
          branch: acton-${{ steps.get_version.outputs.version }}
          title: "acton ${{ steps.get_version.outputs.version }}"
          body: |
            Automatic update triggered by release on actonlang/acton.
          committer: Acton Bot <actbot@acton-lang.org>
          commit-message: "acton ${{ steps.get_version.outputs.version }}"
          signoff: false
