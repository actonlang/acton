"""Test module for docstring field extraction.

This module specifically tests that docstring fields are properly
added to AST Decl constructors and preserved throughout compilation.
"""

import math

def test_function(x: int) -> int:
    """Test function with docstring.

    Args:
        x: Input integer

    Returns:
        The input value multiplied by 2
    """
    return x * 2

def no_docstring_function(x: int) -> int:
    return x * 3

class TestClass:
    """Test class with docstring.

    This class demonstrates docstring preservation
    in class definitions.
    """

    def method_with_doc(self, x: int) -> int:
        """Method with docstring."""
        return x + 1

    def method_without_doc(self, x: int) -> int:
        return x - 1

actor TestActor(name: str):
    """Test actor with docstring.

    Args:
        name: The actor's name
    """

    var name = name

    def process(self, data: str):
        """Process data with docstring."""
        print(f"{name}: {data}")

protocol TestProtocol:
    """Test protocol with docstring.

    This protocol defines a simple interface.
    """

    test_method: (int) -> int

extension TestClass(TestProtocol):
    """Extension with docstring.

    This extension implements TestProtocol for TestClass.
    """

    def test_method(self, x: int) -> int:
        """Implementation of test_method."""
        return x * 10