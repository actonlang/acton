import numpy
import math

# run as follows:

# script -q /dev/null examples/loess_smoother3 104 52 | gnuplot

# first command line argument: nr of weeks shown in window.
# second command line argument: nr of weeks in "loess window", i.e. nr of neighboring observtions used for each smoothed value.

def loess(x, y, xin, win):
    xd = numpy.abs(xin[:,numpy.newaxis] - x)
    q = xd/numpy.partition(xd,win)[:,win][:,numpy.newaxis]
    w  = numpy.clip(q, 0.0, 1.0)
    ws  = (1.0 - w ** 3.0) ** 3.0
    a00 = numpy.sum(ws,1)
    a01 = numpy.dot(ws, x)
    a11 = numpy.dot(ws, x*x)
    b0  = numpy.dot(ws, y)
    b1  = numpy.dot(ws, x*y)
    det = a00*a11-a01*a01
    return ((a11*b0 - a01*b1) + (-a01*b0 + a00*b1)*xin)/det

globalnoise  = numpy.unirandfloat(-0.5, 0.5, 10000)
      
def sample(t0, n, n0, w):
    t1 = t0+float(n)/52.0
    time         = numpy.linspace(t0,t1,n)
    trend        = 2.0 + 0.1 * time
    periodic     = 0.5 * math.sin (6.2832 * time)
    noise        = globalnoise[n0:n0+n:1]
    observation  = trend + periodic + noise

    smooth = loess(time,observation,time,w)
    print("clear\n$data <<EOD")
    for i in range(n):
       print(time[i],observation[i],smooth[i])
    print("EOD")
    print("plot [",t0,":",t1,"][0:5] \'$data\' using 1:2 with lines title \"raw data\", \\")
    print("\'$data\' using 1:3 with lines title \"loess smoothed\"")
    after 4: sample(t0 + (t1-t0)/8,n,n0+n//8,w)
    
actor main(env):
    print ("set terminal aqua title \"Loess smoothening\"")
    print("set multiplot\nplot  [0:1][0:5] 0")
    sample(0.0, int(env.argv[1]), 0, int(env.argv[2]))

